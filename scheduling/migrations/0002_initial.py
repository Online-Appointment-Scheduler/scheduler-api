# Generated by Django 4.2.3 on 2023-07-25 18:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('scheduling', '0001_create_custom_scheduling_scheme'),
    ]

    operations = [
        migrations.CreateModel(
            name='AttendEventRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_pending', models.BooleanField()),
                ('description', models.CharField(blank=True, max_length=150, null=True)),
                ('is_cancelled', models.BooleanField()),
            ],
            options={
                'db_table': 'attend_event_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Blacklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'blacklist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('event_description', models.CharField(blank=True, max_length=500, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('is_recurring', models.BooleanField()),
                ('created_date', models.DateField()),
            ],
            options={
                'db_table': 'event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventInstanceException',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_rescheduled', models.BooleanField()),
                ('is_cancelled', models.BooleanField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('created_date', models.DateField()),
            ],
            options={
                'db_table': 'event_instance_exception',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lobby',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'lobby',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LobbyJoinRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'lobby_join_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MembersToLobby',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'members_to_lobby',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecurringType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'recurring_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=70, null=True)),
                ('second_name', models.CharField(blank=True, max_length=70, null=True)),
                ('last_name', models.CharField(blank=True, max_length=70, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='scheduling.user')),
            ],
            options={
                'db_table': 'manager',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='scheduling.user')),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecurringPattern',
            fields=[
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='scheduling.event')),
                ('separation_count', models.SmallIntegerField(blank=True, null=True)),
                ('day_of_week', models.SmallIntegerField(blank=True, null=True)),
                ('week_of_month', models.SmallIntegerField(blank=True, null=True)),
                ('day_of_month', models.SmallIntegerField(blank=True, null=True)),
                ('month_of_year', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recurring_pattern',
                'managed': False,
            },
        ),
    ]
